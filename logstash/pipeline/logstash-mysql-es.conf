input{
    jdbc {
        tags => ["translate_cuv"]
        jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://${MYSQL_DB_HOST}:3306/${MYSQL_DB_NAME}"
        jdbc_user => "${MYSQL_DB_USERNAME}"
        jdbc_password => "${MYSQL_DB_USERNAME}"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone =>"Asia/Taipei"
        #设置监听间隔 各字段含义（从左至右）分、时、天、月、年，全为*默认含义为每分钟都更新
        schedule => "59 23 * * *"
        statement => "select id, book, chapter, verse, text from translate_cuv WHERE id > :sql_last_value"
        use_column_value => true
        tracking_column => "id"
        last_run_metadata_path => "./logstash_jdbc_last_run"
    }
    jdbc {
        tags => ["translate_kjv"]
        jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://${MYSQL_DB_HOST}:3306/${MYSQL_DB_NAME}"
        jdbc_user => "${MYSQL_DB_USERNAME}"
        jdbc_password => "${MYSQL_DB_USERNAME}"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone =>"Asia/Taipei"
        #设置监听间隔 各字段含义（从左至右）分、时、天、月、年，全为*默认含义为每分钟都更新
        schedule => "59 23 * * *"
        statement => "select id, book, chapter, verse, text from translate_kjv WHERE id > :sql_last_value"
        use_column_value => true
        tracking_column => "id"
        last_run_metadata_path => "./logstash_jdbc_last_run"
    }
}
output{
    if "translate_cuv" in [tags] {
        elasticsearch {
            index => "translate_cuv"
            hosts => "${LOGSTASH_ELASTIC_HOST}"
            user => "elastic"
            password => "${ELASTIC_PASSWORD}"
            document_id => "%{id}"
        }
    }
    if "translate_kjv" in [tags] {
        elasticsearch {
            index => "translate_kjv"
            hosts => "${LOGSTASH_ELASTIC_HOST}"
            user => "elastic"
            password => "${ELASTIC_PASSWORD}"
            document_id => "%{id}"
        }
    }
    stdout {
        codec => json_lines
    }

}